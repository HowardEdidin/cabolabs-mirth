<channel version="3.4.2">
  <id>db852388-3138-40c2-9ead-384f4407cb9e</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>0008_inbox_en</name>
  <description></description>
  <enabled>true</enabled>
  <lastModified>
    <time>1497767339083</time>
    <timezone>America/Montevideo</timezone>
  </lastModified>
  <revision>10</revision>
  <sourceConnector version="3.4.2">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
      <pluginProperties/>
      <pollConnectorProperties version="3.4.2">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>false</pollOnStart>
        <pollingFrequency>5000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.4.2">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <scheme>FILE</scheme>
      <host>${source_folder}</host>
      <fileFilter>*.csv</fileFilter>
      <regex>false</regex>
      <directoryRecursion>false</directoryRecursion>
      <ignoreDot>true</ignoreDot>
      <anonymous>true</anonymous>
      <username>anonymous</username>
      <password>anonymous</password>
      <timeout>10000</timeout>
      <secure>true</secure>
      <passive>true</passive>
      <validateConnection>true</validateConnection>
      <afterProcessingAction>MOVE</afterProcessingAction>
      <moveToDirectory></moveToDirectory>
      <moveToFileName>${originalFilename}_${COUNT}.done</moveToFileName>
      <errorReadingAction>NONE</errorReadingAction>
      <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
      <errorMoveToDirectory></errorMoveToDirectory>
      <errorMoveToFileName></errorMoveToFileName>
      <checkFileAge>true</checkFileAge>
      <fileAge>1000</fileAge>
      <fileSizeMinimum>0</fileSizeMinimum>
      <fileSizeMaximum></fileSizeMaximum>
      <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
      <sortBy>date</sortBy>
      <binary>false</binary>
      <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
    </properties>
    <transformer version="3.4.2">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>patient_id</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;patient_id&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>patient_id</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column1&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>lastname</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column2&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;lastname&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>lastname</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column2&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>firstname</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column3&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;firstname&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>firstname</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column3&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>3</sequenceNumber>
          <name>dob</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column6&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;dob&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>dob</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column6&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>4</sequenceNumber>
          <name>lab_order_number</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column9&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;lab_order_number&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>lab_order_number</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column9&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>5</sequenceNumber>
          <name>result_name</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column11&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;result_name&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>result_name</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column11&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>6</sequenceNumber>
          <name>observation_name</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column24&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;observation_name&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>observation_name</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column24&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>7</sequenceNumber>
          <name>observation_value</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column26&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;observation_value&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>observation_value</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column26&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>8</sequenceNumber>
          <name>observation_units</name>
          <script>var mapping;

try {
	mapping = msg[&apos;row&apos;][1][&apos;column28&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;observation_units&apos;, validate( mapping , &apos;&apos;, new Array()));</script>
          <type>Mapper</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>observation_units</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;row&apos;][1][&apos;column28&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
            <entry>
              <string>isGlobal</string>
              <string>channel</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">UGF0aWVudCBJRCxQYXRpZW50IExhc3RuYW1lLFBhdGllbnQgRmlyc3RuYW1lLFBhdGllbnQgTWlk
ZGxlbmFtZSxQYXRpZW50IFN1ZmZpeCxEYXRlIG9mIEJpcnRoLERvY3VtZW50IFR5cGUsUGF0aWVu
dCBDbGFzcyxMYWIgT3JkZXIgTnVtYmVyLExhYiBSZXN1bHQgQ29kZSxMYWIgUmVzdWx0IE5hbWUs
TGFiIFJlc3VsdCBPcmRlcixPcmlnaW5hdG9yIENvZGUsT3JpZ2luYXRvciBMYXN0bmFtZSxPcmln
aW5hdG9yIEZpcnN0bmFtZSxPcmlnaW5hdG9yIE1pZGRsZW5hbWUsT2JzZXJ2YXRpb24gRGF0ZXRp
bWUsTGFiIFNlbnQgRGF0ZXRpbWUsU2VydmljZSBMb2NhdGlvbiBDb2RlLFNlcnZpY2UgTG9jYXRp
b24gRGVzY3JpcHRpb24sQ29tcGxldGVkIERhdGV0aW1lLFJlc3VsdCBTdGF0dXMsT2JzZXJ2YXRp
b24gQ29kZSxPYnNlcnZhdGlvbiBOYW1lLE9ic2VydmF0aW9uIE9yZGVyLE9ic2VydmF0aW9uIFJl
c3VsdCxPYnNlcnZhdGlvbiBSYW5nZSxPYnNlcnZhdGlvbiBVbml0cyxPYnNlcnZhdGlvbiBGbGFn
LE9ic2VydmF0aW9uIFN0YXR1cyxPYnNlcnZhdGlvbiBUZXN0ZWQgRGF0ZXRpbWUsT2JzZXJ2ZXIg
Q29kZSxPYnNlcnZlciBMYXN0bmFtZSxPYnNlcnZlciBGaXJzdG5hbWUsT2JzZXJ2ZXIgTWlkZGxl
bmFtZSxDb21tZW50LFBlcmZvcm1pbmcgTGFiClUxMTExMTEsQSxBLEEsQSwxOTc1MDcwNSwsSSwx
MjM0NTYsUFMsUGh5c2ljYWwgU2lnbnMsMSwsLCwsMjAxMTA3MDUsLCwsLEYsMjUsU3lzdG9saWMg
QlAsMSwxMDAsLG1taGcsLEYsLCwsLCwsTW9uYXJjaAo=</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>DELIMITED</inboundDataType>
      <outboundDataType>DELIMITED</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
          <numberedRows>false</numberedRows>
          <ignoreCR>true</ignoreCR>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
          <splitType>Record</splitType>
          <batchSkipRecords>0</batchSkipRecords>
          <batchMessageDelimiter></batchMessageDelimiter>
          <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
          <batchGroupingColumn></batchGroupingColumn>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
          <numberedRows>false</numberedRows>
          <ignoreCR>true</ignoreCR>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
          <columnDelimiter>,</columnDelimiter>
          <recordDelimiter>\n</recordDelimiter>
          <quoteToken>&quot;</quoteToken>
          <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
          <quoteEscapeToken>\</quoteEscapeToken>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
          <splitType>Record</splitType>
          <batchSkipRecords>0</batchSkipRecords>
          <batchMessageDelimiter></batchMessageDelimiter>
          <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
          <batchGroupingColumn></batchGroupingColumn>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.2">
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.2">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>logger.info(&quot;Patient ID: &quot;+ $(&apos;patient_id&apos;));
logger.info(&quot;Lastname: &quot;+ $(&apos;lastname&apos;));
logger.info(&quot;Name: &quot;+ $(&apos;firstname&apos;));
logger.info(&quot;DoB: &quot;+ $(&apos;dob&apos;));
logger.info(&quot;Order: &quot;+ $(&apos;lab_order_number&apos;));
logger.info(&quot;Results: &quot;+ $(&apos;result_name&apos;));
logger.info(&quot;Observation: &quot;+ $(&apos;observation_name&apos;));
logger.info(&quot;Value: &quot;+ $(&apos;observation_value&apos;));
logger.info(&quot;Units: &quot;+ $(&apos;observation_units&apos;));
</script>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundDataType>DELIMITED</inboundDataType>
        <outboundDataType>DELIMITED</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
            <numberedRows>false</numberedRows>
            <ignoreCR>true</ignoreCR>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
            <splitType>Record</splitType>
            <batchSkipRecords>0</batchSkipRecords>
            <batchMessageDelimiter></batchMessageDelimiter>
            <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
            <batchGroupingColumn></batchGroupingColumn>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
            <numberedRows>false</numberedRows>
            <ignoreCR>true</ignoreCR>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
            <splitType>Record</splitType>
            <batchSkipRecords>0</batchSkipRecords>
            <batchMessageDelimiter></batchMessageDelimiter>
            <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
            <batchGroupingColumn></batchGroupingColumn>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundDataType>DELIMITED</inboundDataType>
        <outboundDataType>DELIMITED</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
            <numberedRows>false</numberedRows>
            <ignoreCR>true</ignoreCR>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
            <splitType>Record</splitType>
            <batchSkipRecords>0</batchSkipRecords>
            <batchMessageDelimiter></batchMessageDelimiter>
            <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
            <batchGroupingColumn></batchGroupingColumn>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
            <numberedRows>false</numberedRows>
            <ignoreCR>true</ignoreCR>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
            <columnDelimiter>,</columnDelimiter>
            <recordDelimiter>\n</recordDelimiter>
            <quoteToken>&quot;</quoteToken>
            <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
            <quoteEscapeToken>\</quoteEscapeToken>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
            <splitType>Record</splitType>
            <batchSkipRecords>0</batchSkipRecords>
            <batchMessageDelimiter></batchMessageDelimiter>
            <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
            <batchGroupingColumn></batchGroupingColumn>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.2">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.2">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries/>
</channel>