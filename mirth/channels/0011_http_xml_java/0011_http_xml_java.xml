<channel version="3.4.1">
  <id>5d993fd0-eb76-46f0-a988-eb70120bf326</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>0011_http_xml_java</name>
  <description></description>
  <enabled>true</enabled>
  <lastModified>
    <time>1475174485148</time>
    <timezone>America/Cayenne</timezone>
  </lastModified>
  <revision>11</revision>
  <sourceConnector version="3.4.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.4.1">
      <pluginProperties>
        <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.4.1">
  <authType>NONE</authType>
        </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
      </pluginProperties>
      <listenerConnectorProperties version="3.4.1">
        <host>0.0.0.0</host>
        <port>6674</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="3.4.1">
        <responseVariable>transformed</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <xmlBody>true</xmlBody>
      <parseMultipart>false</parseMultipart>
      <includeMetadata>true</includeMetadata>
      <binaryMimeTypes></binaryMimeTypes>
      <binaryMimeTypesRegex>false</binaryMimeTypesRegex>
      <responseContentType>text/plain</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode></responseStatusCode>
      <responseHeaders class="linked-hash-map">
        <entry>
          <string>Access-Control-Allow-Origin</string>
          <list>
            <string>*</string>
          </list>
        </entry>
      </responseHeaders>
      <charset>UTF-8</charset>
      <contextPath>java</contextPath>
      <timeout>0</timeout>
      <staticResources/>
    </properties>
    <transformer version="3.4.1">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>Transformacion usando Java</name>
          <script>logger.info(msg);

var action = msg[&apos;Parameters&apos;][&apos;action&apos;].toString()

// Extrae el mensaje del Request HTTP
msg = new XML(msg[&apos;Content&apos;].toString());

logger.info(msg);

var value = msg[&apos;persona&apos;][&apos;nombre&apos;];

if (action == &quot;upper&quot;)
  value = Packages.paquete.Servicio.toUpper(value);
else if (action == &quot;lower&quot;)
  value = Packages.paquete.Servicio.toLower(value);

// Nombre transformado
msg[&apos;persona&apos;][&apos;nombre&apos;] = value;


// Usando un servicio para obtener el largo, debe ser igual al largo
if (msg[&apos;persona&apos;][&apos;nombre&apos;].toString().length == Packages.paquete.Servicio.size(msg[&apos;persona&apos;][&apos;nombre&apos;].toString()))
{
   logger.info(&apos;OK&apos;);
}
else logger.info(&apos;ERROR&apos;);


logger.info(&quot;length :&quot;+ msg[&apos;persona&apos;][&apos;nombre&apos;].toString().length);
logger.info(&quot;servicio length :&quot;+ Packages.paquete.Servicio.size(msg[&apos;persona&apos;][&apos;nombre&apos;]));
logger.info(msg);</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>logger.info(msg);

var action = msg[&apos;Parameters&apos;][&apos;action&apos;].toString()

// Extrae el mensaje del Request HTTP
msg = new XML(msg[&apos;Content&apos;].toString());

logger.info(msg);

var value = msg[&apos;persona&apos;][&apos;nombre&apos;];

if (action == &quot;upper&quot;)
  value = Packages.paquete.Servicio.toUpper(value);
else if (action == &quot;lower&quot;)
  value = Packages.paquete.Servicio.toLower(value);

// Nombre transformado
msg[&apos;persona&apos;][&apos;nombre&apos;] = value;


// Usando un servicio para obtener el largo, debe ser igual al largo
if (msg[&apos;persona&apos;][&apos;nombre&apos;].toString().length == Packages.paquete.Servicio.size(msg[&apos;persona&apos;][&apos;nombre&apos;].toString()))
{
   logger.info(&apos;OK&apos;);
}
else logger.info(&apos;ERROR&apos;);


logger.info(&quot;length :&quot;+ msg[&apos;persona&apos;][&apos;nombre&apos;].toString().length);
logger.info(&quot;servicio length :&quot;+ Packages.paquete.Servicio.size(msg[&apos;persona&apos;][&apos;nombre&apos;]));
logger.info(msg);</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjE5Mi4xNjguMS4xMDc8L1JlbW90ZUFk
ZHJlc3M+DQogICAgPFJlcXVlc3RVcmw+aHR0cDovLzE5Mi4xNjguMS4xMDk6NjY3NC9qYXZhLzwv
UmVxdWVzdFVybD4NCiAgICA8TWV0aG9kPlBPU1Q8L01ldGhvZD4NCiAgICA8UmVxdWVzdFBhdGg+
YWN0aW9uPXVwcGVyPC9SZXF1ZXN0UGF0aD4NCiAgICA8UmVxdWVzdENvbnRleHRQYXRoPi9qYXZh
LzwvUmVxdWVzdENvbnRleHRQYXRoPg0KICAgIDxQYXJhbWV0ZXJzPg0KICAgICAgICA8YWN0aW9u
PnVwcGVyPC9hY3Rpb24+DQogICAgPC9QYXJhbWV0ZXJzPg0KICAgIDxIZWFkZXI+DQogICAgICAg
IDxBY2NlcHQtTGFuZ3VhZ2U+ZXMsZW4tVVM7cT0wLjgsZW47cT0wLjY8L0FjY2VwdC1MYW5ndWFn
ZT4NCiAgICAgICAgPEhvc3Q+MTkyLjE2OC4xLjEwOTo2Njc0PC9Ib3N0Pg0KICAgICAgICA8Q29u
dGVudC1MZW5ndGg+ODA8L0NvbnRlbnQtTGVuZ3RoPg0KICAgICAgICA8QWNjZXB0LUVuY29kaW5n
Pmd6aXAsIGRlZmxhdGU8L0FjY2VwdC1FbmNvZGluZz4NCiAgICAgICAgPEROVD4xPC9ETlQ+DQog
ICAgICAgIDxVc2VyLUFnZW50Pk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDUuMSkgQXBwbGVXZWJL
aXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ5LjAuMjYyMy4xMTIgU2FmYXJp
LzUzNy4zNjwvVXNlci1BZ2VudD4NCiAgICAgICAgPE9yaWdpbj5jaHJvbWUtZXh0ZW5zaW9uOi8v
Z21vZGlobmZpYmJqZGVjYmFubXBtYm1lZmZubWxvZWw8L09yaWdpbj4NCiAgICAgICAgPENvbm5l
Y3Rpb24+a2VlcC1hbGl2ZTwvQ29ubmVjdGlvbj4NCiAgICAgICAgPENvbnRlbnQtVHlwZT5hcHBs
aWNhdGlvbi94bWw8L0NvbnRlbnQtVHlwZT4NCiAgICAgICAgPEFjY2VwdD4qLyo8L0FjY2VwdD4N
CiAgICA8L0hlYWRlcj4NCiAgICA8Q29udGVudCBtdWx0aXBhcnQ9Im5vIj4mbHQ7bWVuc2FqZSZn
dDsNCiAgICAmbHQ7cGVyc29uYSZndDsNCiAgICAgICAgJmx0O25vbWJyZSZndDtQYWJsbyZsdDsv
bm9tYnJlJmd0Ow0KICAgICZsdDsvcGVyc29uYSZndDsNCiZsdDsvbWVuc2FqZSZndDs8L0NvbnRl
bnQ+DQo8L0h0dHBSZXF1ZXN0Pg0K</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>XML</inboundDataType>
      <outboundDataType>XML</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.1">
      <rules/>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.1">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.4.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <script>logger.info( connectorMessage.getEncodedData() );

responseMap.put(&apos;transformed&apos;, connectorMessage.getEncodedData());</script>
      </properties>
      <transformer version="3.4.1">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.1">
        <steps/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.4.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.4.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.4.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.1">
        <rules/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries/>
</channel>